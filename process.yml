# Orb 'circleci/gcp-cli@1.3.0' resolved to 'circleci/gcp-cli@1.3.0'
version: 2
jobs:
  build:
    docker:
    - image: google/cloud-sdk:latest
    working_directory: ~/repo
    steps:
    - checkout
    - run:
        command: |
          install () {
            # Set sudo to work whether logged in as root user or non-root user
            if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi

            # Create an environment variable for the correct distribution
            if [[ $(command -v lsb_release) == "" ]]; then
              $SUDO apt-get update && $SUDO apt-get -y install lsb-release
              export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            else
              export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            fi

            # Add the Google Cloud SDK distribution URI as a package source
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | $SUDO tee -a /etc/apt/sources.list.d/google-cloud-sdk.list

            # Import the Google Cloud public key
            if [[ $(command -v curl) == "" ]]; then
              $SUDO apt-get update && $SUDO apt-get -y install curl
              curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | $SUDO apt-key add -
            else
              curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | $SUDO apt-key add -
            fi

            # Update and install the Cloud SDK
            $SUDO apt-get update && $SUDO apt-get -y install google-cloud-sdk
          }

          if grep 'docker\|lxc' /proc/1/cgroup; then
            if [[ $(command -v gcloud) == "" ]]; then
              install
            else
              echo "gcloud CLI is already installed."
            fi
          else
            echo "----------------------------------------------------------------------------------------------------"
            echo "this is a machine executor job, replacing default installation of gcloud CLI"
            echo "----------------------------------------------------------------------------------------------------"
            sudo rm -rf /opt/google-cloud-sdk
            install
          fi
        name: Install latest gcloud CLI version, if not available
    - run:
        command: gcloud version
        name: Print version
    - run:
        command: |
          # Store service account
          echo $GCLOUD_SERVICE_KEY_DEV > ${HOME}/gcloud-service-key.json

          # Initialize gcloud CLI
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project $GOOGLE_PROJECT_ID_DEV
          gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE_DEV
        name: Initialize gcloud CLI to connect to Google Cloud
    - run:
        name: Update PATH and Define Environment Variable at Runtime
        command: |
          echo ${GCLOUD_SERVICE_KEY}
          echo ${GOOGLE_PROJECT_ID}
          echo ${GOOGLE_COMPUTE_ZONE}
          echo 'export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json' >> $BASH_ENV
          source $BASH_ENV
          echo $BASH_ENV
          echo ${HOME}/gcloud-service-key.json
          cat $GOOGLE_APPLICATION_CREDENTIALS
          echo $GOOGLE_APPLICATION_CREDENTIALS
          chmod a+x ./gradlew
          echo $(ls -l)
    - run:
        command: ./gradlew build
workflows:
  version: 2
  workflow:
    jobs:
    - build

# Original config.yml file:
# defaults: &defaults
#   docker:
#     - image: google/cloud-sdk:latest
#   working_directory: ~/repo
# 
# orbs:
#   gcp-cli: circleci/gcp-cli@1.3.0
# 
# version: 2.1
# jobs:
#   build:
#     <<: *defaults
# 
#     steps:
#       - checkout
#       - gcp-cli/install
#       - gcp-cli/initialize:
#           gcloud-service-key: GCLOUD_SERVICE_KEY_DEV
#           google-project-id: GOOGLE_PROJECT_ID_DEV
#           google-compute-zone: GOOGLE_COMPUTE_ZONE_DEV
# 
# 
#       - run:
#           name: Update PATH and Define Environment Variable at Runtime
#           command: |
#             echo ${GCLOUD_SERVICE_KEY}
#             echo ${GOOGLE_PROJECT_ID}
#             echo ${GOOGLE_COMPUTE_ZONE}
#             echo 'export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json' >> $BASH_ENV
#             source $BASH_ENV
#             echo $BASH_ENV
#             echo ${HOME}/gcloud-service-key.json
#             cat $GOOGLE_APPLICATION_CREDENTIALS
#             echo $GOOGLE_APPLICATION_CREDENTIALS
#             chmod a+x ./gradlew
#             echo $(ls -l)
# 
#       - run: ./gradlew build
# #      - run: ~/gradlew test